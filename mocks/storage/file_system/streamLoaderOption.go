// Code generated by mockery v2.52.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// streamLoaderOption is an autogenerated mock type for the streamLoaderOption type
type streamLoaderOption struct {
	mock.Mock
}

type streamLoaderOption_Expecter struct {
	mock *mock.Mock
}

func (_m *streamLoaderOption) EXPECT() *streamLoaderOption_Expecter {
	return &streamLoaderOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: sl
func (_m *streamLoaderOption) Execute(sl file_system.streamLoader) file_system.streamLoader {
	ret := _m.Called(sl)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 file_system.streamLoader
	if rf, ok := ret.Get(0).(func(file_system.streamLoader) file_system.streamLoader); ok {
		r0 = rf(sl)
	} else {
		r0 = ret.Get(0).(file_system.streamLoader)
	}

	return r0
}

// streamLoaderOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type streamLoaderOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - sl file_system.streamLoader
func (_e *streamLoaderOption_Expecter) Execute(sl interface{}) *streamLoaderOption_Execute_Call {
	return &streamLoaderOption_Execute_Call{Call: _e.mock.On("Execute", sl)}
}

func (_c *streamLoaderOption_Execute_Call) Run(run func(sl file_system.streamLoader)) *streamLoaderOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(file_system.streamLoader))
	})
	return _c
}

func (_c *streamLoaderOption_Execute_Call) Return(_a0 file_system.streamLoader) *streamLoaderOption_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *streamLoaderOption_Execute_Call) RunAndReturn(run func(file_system.streamLoader) file_system.streamLoader) *streamLoaderOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// newStreamLoaderOption creates a new instance of streamLoaderOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newStreamLoaderOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *streamLoaderOption {
	mock := &streamLoaderOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
